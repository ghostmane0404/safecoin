name: CI

on:
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ '*' ]

jobs:
  detekt:
    name: Detekt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Upload Detekt Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-reports-${{ github.run_number }}
          path: |
            **/build/reports/detekt/

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Lint for Dev Debug
        run: ./gradlew lintDevDebug

      - name: Upload Lint Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports-dev-debug-${{ github.run_number }}
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml
            **/build/reports/lint-results*.txt

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests for Dev Debug
        run: ./gradlew testDevDebugUnitTest

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-dev-debug-${{ github.run_number }}
          path: |
            **/build/reports/tests/
            **/build/test-results/

  build:
    name: Build APKs
    runs-on: ubuntu-latest
    needs: [detekt, lint, test]
    strategy:
      matrix:
        include:
          - flavor: Dev
            buildType: Debug
            variant: DevDebug
          - flavor: Dev
            buildType: Release
            variant: DevRelease
          - flavor: Prod
            buildType: Debug
            variant: ProdDebug
          - flavor: Prod
            buildType: Release
            variant: ProdRelease

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build ${{ matrix.variant }} APK
        run: ./gradlew assemble${{ matrix.variant }}

      - name: Upload ${{ matrix.variant }} APK
        uses: actions/upload-artifact@v4
        with:
          name: apk-${{ matrix.variant }}-${{ github.run_number }}
          path: app/build/outputs/apk/${{ matrix.flavor | lower }}/${{ matrix.buildType | lower }}/*.apk

  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [detekt, lint, test, build]
    if: always()

    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ needs.detekt.result }}" != "success" || 
                "${{ needs.lint.result }}" != "success" || 
                "${{ needs.test.result }}" != "success" || 
                "${{ needs.build.result }}" != "success" ]]; then
            echo "One or more jobs failed"
            exit 1
          else
            echo "All CI jobs passed successfully!"
          fi