name: CI

on:
  push:
    branches: [ '*' ]  # –í—Å–µ –≤–µ—Ç–∫–∏ –ø—Ä–∏ push
  pull_request:
    branches: [ '*' ]  # –í—Å–µ –≤–µ—Ç–∫–∏ –ø—Ä–∏ PR

jobs:
  detekt:
    name: Detekt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Detekt
        run: ./gradlew detekt

      - name: Upload Detekt Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: detekt-reports-${{ github.run_number }}
          path: |
            **/build/reports/detekt/

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Lint
        run: ./gradlew lintDebug

      - name: Upload Lint Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports-${{ github.run_number }}
          path: |
            **/build/reports/lint-results*.html
            **/build/reports/lint-results*.xml
            **/build/reports/lint-results*.txt

  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run Unit Tests
        run: ./gradlew testDebugUnitTest

      - name: Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-${{ github.run_number }}
          path: |
            **/build/reports/tests/
            **/build/test-results/

  build:
    name: Build APK
    runs-on: ubuntu-latest
    needs: [detekt, lint, test]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk-${{ github.run_number }}
          path: app/build/outputs/apk/debug/*.apk

  ci-success:
    name: CI Success
    runs-on: ubuntu-latest
    needs: [detekt, lint, test, build]
    if: always()

    steps:
      - name: Success
        run: echo "üéâ All checks passed!"